{"version":3,"file":"static/js/588.15bf0efe.chunk.js","mappings":"sPAKaA,EAAmB,SAAHC,GAAyC,IAAnCC,EAAOD,EAAPC,QAASC,EAAKF,EAALE,MAAOC,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MACvDC,GAA+BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAYF,EAAA,GAAEG,EAAMH,EAAA,GAErBI,EAA0B,WAAH,OAASD,GAAO,SAACE,GAAI,OAAMA,CAAI,GAAE,EAExDC,EAA0B,SAACC,GAC/BA,EAAMC,gBACR,EACA,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CACThB,KAAMA,EACNF,QAASA,EACTG,MAAOA,EACPgB,OAAQ,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,MAASC,EAAQF,EAARE,SAAUC,EAAKH,EAALG,MAAuBC,EAAKL,EAAnBM,WAAcD,MAAK,OACxDE,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAACC,WAAS,EAACC,QAAQ,WAAUb,SAAA,EACvCF,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,QAAQ,8BAA6Bf,SAAEhB,KACnDc,EAAAA,EAAAA,KAACkB,EAAAA,EAAa,CACZC,GAAG,8BACHC,KAAM3B,EAAe,OAAS,WAC9Be,SAAUA,EACVC,MAAOA,EACPC,MAAOA,EACPW,WAAY,CAAEC,aAAc,gBAC5BC,cACEvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CAACC,SAAS,MAAKvB,UAC5BF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CACT,aAAW,6BACXC,QAAShC,EACTiC,YAAa/B,EACbgC,KAAK,MAAK3B,SAETT,GAAeO,EAAAA,EAAAA,KAAC8B,EAAAA,EAAa,KAAM9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAU,QAIrD7C,MAAOA,MAEG,KAKxB,C,uFC7Ca8C,EAAgB,SAAHhD,GAWnB,IAVLC,EAAOD,EAAPC,QACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACA6C,EAAQjD,EAARiD,SACAC,EAAQlD,EAARkD,SACAC,EAAWnD,EAAXmD,YACAC,EAAWpD,EAAXoD,YACAC,EAAWrD,EAAXqD,YACAC,EAAUtD,EAAVsD,WAEA,OACEtC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CACThB,KAAMA,EACNF,QAASA,EACTG,MAAOA,EACPmD,aAAcN,EACd7B,OAAQ,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,MAASC,EAAQF,EAARE,SAAUC,EAAKH,EAALG,MAAO+B,EAAGlC,EAAHkC,IAAqB9B,EAAKL,EAAnBM,WAAcD,MAAK,OAC7DV,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRH,WAAY5B,EAAQA,EAAMgC,QAAUJ,EACpC5B,QAASA,EACTF,SAAU,SAACmC,GAEPnC,EADE4B,EACOO,EAAEC,OAAOnC,MAAM2B,cACfC,EACAM,EAAEC,OAAOnC,MAAM4B,cAEfM,EAEb,EACAE,OAAQ,SAACF,QACaG,IAAhBX,GACFA,EAAYQ,EAAEC,OAAOnC,MAEzB,EACAsC,SAAUP,EACV/B,MAAOA,EACPvB,MAAOA,EACP6B,QAAQ,WACRM,WAAY,CAAEa,SAAUA,GACxBpB,WAAS,GACT,KAKZ,C,oTCjCMyB,EAAe,CACnBS,SAAU,GACVC,SAAU,GACVC,UAAW,IAEE,SAASC,IACtB,IAAMC,GAAUC,EAAAA,EAAAA,GAAc,qBAC9BhE,GAAoCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCiE,EAAU/D,EAAA,GAAEgE,EAAahE,EAAA,GAChCiE,GAAkCC,EAAAA,EAAAA,IAAQ,CAAEC,cAAenB,IAAnDoB,EAAYH,EAAZG,aAAc1E,EAAOuE,EAAPvE,QACtB2E,GAAgCtE,EAAAA,EAAAA,WAAS,GAAMuE,GAAArE,EAAAA,EAAAA,GAAAoE,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8B1E,EAAAA,EAAAA,UAAS,CAAE2E,MAAO,QAASC,KAAM,0BAA0BC,GAAA3E,EAAAA,EAAAA,GAAAwE,EAAA,GAAlFI,EAAOD,EAAA,GACRE,GADoBF,EAAA,IACTG,EAAAA,EAAAA,OACTC,GAAeC,EAAAA,EAAAA,KAAfD,WACFE,EAAQ,eAAAzF,GAAA0F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAER,GADlB/B,GAAc,GACdQ,GAAY,GACU,SAAlBK,EAAQH,MAAgB,CAAAmB,EAAAE,KAAA,QAC1BjB,EAAS,gBAADkB,OAAiBT,EAAK5B,YAAakC,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGjBE,EAAAA,EAAMC,KAAK,GAADF,OAAIG,OAA6B,eAAe,CAChFC,SAAUb,EAAK9B,SACf4C,SAAUd,EAAK7B,WACd,KAAD,EAHI8B,EAASK,EAAAS,KAITb,EAAWD,EAAUD,KAC3BP,EAAWS,GACXc,MAAM,qBACNC,YAAW,WACT1B,EAAS,oBACX,GAAG,KACHd,GAAc,GAAO6B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAErBrB,GAAY,GACZR,GAAc,GACd0C,QAAQC,IAAGd,EAAAY,IACXF,MAAkB,QAAbb,EAACG,EAAAY,GAAIhB,gBAAQ,IAAAC,GAAM,QAANC,EAAZD,EAAcH,YAAI,IAAAI,OAAN,EAAZA,EAAoBxC,SAAS,yBAAA0C,EAAAe,OAAA,GAAAtB,EAAA,mBAGxC,gBAzBauB,GAAA,OAAApH,EAAAqH,MAAA,KAAAC,UAAA,KAiCd,OANAC,EAAAA,EAAAA,YAAU,WACJC,EAAAA,EAAQC,IAAI,gBACdpC,EAAS,oBAEb,GAAG,CAACA,IAEAmC,EAAAA,EAAQC,IAAI,gBACPzG,EAAAA,EAAAA,KAAC0G,EAAAA,GAAQ,CAACC,GAAG,uBAIpB/F,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,OACRC,MAAO,OACPC,gBAAgB,OAAD5B,OAAS6B,EAAK,KAC7BC,iBAAkB,YAClBC,eAAgB,SAChBpH,UAEFF,EAAAA,EAAAA,KAAA,QAAMyE,SAAUd,EAAac,GAAUvE,UACrCU,EAAAA,EAAAA,MAAC2G,EAAAA,EAAK,CACJV,GAAI,CACFC,QAAS,OACTI,MAAO9D,EAAU,WAAa,UAC9B6D,OAAQ7D,EAAU,UAAY,WAC9BoE,EAAG,EACHC,cAAe,SACfV,WAAY,SACZC,eAAgB,UAElBU,UAAW,EAAExH,SAAA,EAObU,EAAAA,EAAAA,MAACgG,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQa,IAAK,GAAIzH,SAAA,EACnCF,EAAAA,EAAAA,KAAC4H,EAAAA,EAAO,CACNC,UAAWC,EAAAA,EACXjB,GAAI,CAAEK,MAAO,OAAQD,OAAQ,OAAQc,GAAI,UACzCC,QAAQ,gBACRC,MAAM,WAERjI,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CAACnH,QAAQ,KAAK8F,GAAI,CAAEsB,GAAI/E,EAAU,OAAS,OAAQgF,GAAI,UAAWlI,SAAC,qCAIhFU,EAAAA,EAAAA,MAACgG,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQW,cAAe,SAAUP,MAAO,OAAQS,IAAK,GAAIzH,SAAA,CACxD,UAAlBkE,EAAQH,QACPjE,EAAAA,EAAAA,KAACgC,EAAAA,EAAa,CACZ7C,KAAM,WACNF,QAASA,EACTC,MAAO,WACPE,MAAO,CAAEiJ,UAAU,GACnBxB,GAAI,CAAEyB,EAAG,KAGM,UAAlBlE,EAAQH,QACPjE,EAAAA,EAAAA,KAACjB,EAAAA,EAAgB,CACfI,KAAM,WACNF,QAASA,EACTC,MAAO,WACPE,MAAO,CAAEiJ,UAAU,GACnBxB,GAAI,CAAEyB,EAAG,QAII,SAAlBlE,EAAQH,QACPjE,EAAAA,EAAAA,KAACgC,EAAAA,EAAa,CAAC7C,KAAM,YAAaF,QAASA,EAASC,MAAO,aAAcE,MAAO,CAAEiJ,UAAU,MAE9FzH,EAAAA,EAAAA,MAACgG,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTE,eAAgB,WAChBD,WAAY,SACZE,OAAQ7D,EAAU,WAAa,UAC/B8D,MAAO9D,EAAU,WAAa,WAC9BlD,SAAA,EAEFF,EAAAA,EAAAA,KAACuI,EAAAA,EAAI,CACH5G,QAAS,WACP0C,EAAS,aACX,EAAEnE,SACH,sBAGkB,UAAlBkE,EAAQH,QACPjE,EAAAA,EAAAA,KAACwI,EAAAA,EAAa,CAACpH,KAAK,SAASyF,GAAI,CAAEI,OAAQ,WAAYqB,EAAG,EAAGpB,MAAO,WAAauB,QAASnF,EAAWpD,SAAC,UAIrF,SAAlBkE,EAAQH,QACPjE,EAAAA,EAAAA,KAAC0I,EAAAA,EAAM,CAACtH,KAAK,SAASyF,GAAI,CAAEI,OAAQ,WAAYqB,EAAG,EAAGpB,MAAO,WAAYhH,SAAC,oBAQpFF,EAAAA,EAAAA,KAAC2I,EAAAA,EAAQ,CAAC9B,GAAI,CAAEoB,MAAO,OAAQW,OAAQ,SAACC,GAAK,OAAKA,EAAMD,OAAOE,OAAS,CAAC,GAAIC,KAAMjF,EAAS5D,UAC1FF,EAAAA,EAAAA,KAACgJ,EAAAA,EAAgB,CAACf,MAAM,gBAIhC,C","sources":["components/common/PasswordWithEyes.js","components/common/TextFieldComp.js","pages/LoginPage.js"],"sourcesContent":["import { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from '@mui/material';\r\nimport { Controller } from 'react-hook-form';\r\nimport { useState } from 'react';\r\n\r\nexport const PasswordWithEyes = ({ control, label, name, rules }) => {\r\n  const [showPassword, setPwd] = useState(false);\r\n\r\n  const handleClickShowPassword = () => setPwd((show) => !show);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        rules={rules}\r\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n          <FormControl fullWidth variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              onChange={onChange}\r\n              value={value}\r\n              error={error}\r\n              inputProps={{ autoComplete: 'new-password' }}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label={label}\r\n            />\r\n          </FormControl>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { TextField } from '@mui/material';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nexport const TextFieldComp = ({\r\n  control,\r\n  label,\r\n  name,\r\n  rules,\r\n  valueovr,\r\n  readOnly,\r\n  onChangeovr,\r\n  toUpperCase,\r\n  toLowerCase,\r\n  helperText,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        rules={rules}\r\n        defaultValue={valueovr}\r\n        render={({ field: { onChange, value, ref }, fieldState: { error } }) => (\r\n          <TextField\r\n            helperText={error ? error.message : helperText}\r\n            error={!!error}\r\n            onChange={(e) => {\r\n              if (toUpperCase) {\r\n                onChange(e.target.value.toUpperCase());\r\n              } else if (toLowerCase) {\r\n                onChange(e.target.value.toLowerCase());\r\n              } else {\r\n                onChange(e);\r\n              }\r\n            }}\r\n            onBlur={(e) => {\r\n              if (onChangeovr !== undefined) {\r\n                onChangeovr(e.target.value);\r\n              }\r\n            }}\r\n            inputRef={ref}\r\n            value={value}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            inputProps={{ readOnly: readOnly }}\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Paper, Box, Button, Link, Backdrop } from '@mui/material';\r\n\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useForm } from 'react-hook-form';\r\nimport { TextFieldComp } from 'src/components/common/TextFieldComp';\r\nimport { Typography } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useSession } from 'src/provider/sessionProvider';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport SvgIcon from '@mui/material/SvgIcon';\r\nimport { PasswordWithEyes } from 'src/components/common/PasswordWithEyes';\r\nimport imgbg from '../images/gama-tower.jpg';\r\nimport { ReactComponent as KpnNav } from '../images/kpn-logo.svg';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst defaultValue = {\r\n  Username: '',\r\n  Password: '',\r\n  FormToken: '',\r\n};\r\nexport default function LoginPage() {\r\n  const matches = useMediaQuery('(max-width:380px)');\r\n  const [btnClicked, setBtnclicked] = useState();\r\n  const { handleSubmit, control } = useForm({ defaultValues: defaultValue });\r\n  const [openLoad, setOpenload] = useState(false);\r\n  const [dirForm, setDirform] = useState({ state: 'login', html: 'User with form link ?' });\r\n  const navigate = useNavigate();\r\n  const { setSession } = useSession();\r\n  const onSubmit = async (data) => {\r\n    setBtnclicked(true);\r\n    setOpenload(true);\r\n    if (dirForm.state === 'form') {\r\n      navigate(`/frm/newform/${data.FormToken}`);\r\n    } else {\r\n      try {\r\n        const logindata = await axios.post(`${process.env.REACT_APP_URL_LOC}/user/login`, {\r\n          username: data.Username,\r\n          password: data.Password,\r\n        });\r\n        const response = logindata.data;\r\n        setSession(response);\r\n        alert('Successfull login');\r\n        setTimeout(() => {\r\n          navigate('/dashboard/ticket');\r\n        }, 1000);\r\n        setBtnclicked(false);\r\n      } catch (err) {\r\n        setOpenload(false);\r\n        setBtnclicked(false);\r\n        console.log(err);\r\n        alert(err.response?.data?.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Cookies.get('accessToken')) {\r\n      navigate('/dashboard/ticket');\r\n    }\r\n  }, [navigate]);\r\n\r\n  if (Cookies.get('accessToken')) {\r\n    return <Navigate to=\"/dashboard/ticket\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100%',\r\n          width: '100%',\r\n          backgroundImage: `url(${imgbg})`,\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'cover',\r\n        }}\r\n      >\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Paper\r\n            sx={{\r\n              display: 'flex',\r\n              width: matches ? '18.75rem' : '37.5rem',\r\n              height: matches ? '37.5rem' : '18.75rem',\r\n              p: 3,\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            elevation={3}\r\n          >\r\n            {/* <Box>\r\n              <SvgIcon>\r\n                <Logo />\r\n              </SvgIcon>\r\n            </Box> */}\r\n            <Box sx={{ display: 'flex', gap: 1 }}>\r\n              <SvgIcon\r\n                component={KpnNav}\r\n                sx={{ width: '2rem', height: '2rem', mt: '0.1rem' }}\r\n                viewBox=\"0 0 5000 5000\"\r\n                color=\"white\"\r\n              />\r\n              <Typography variant=\"h4\" sx={{ mb: matches ? '5rem' : '2rem', pb: '0.5rem' }}>\r\n                Vendor Management System KPN\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', width: '100%', gap: 1 }}>\r\n              {dirForm.state === 'login' && (\r\n                <TextFieldComp\r\n                  name={'Username'}\r\n                  control={control}\r\n                  label={'Username'}\r\n                  rules={{ required: true }}\r\n                  sx={{ m: 1 }}\r\n                />\r\n              )}\r\n              {dirForm.state === 'login' && (\r\n                <PasswordWithEyes\r\n                  name={'Password'}\r\n                  control={control}\r\n                  label={'Password'}\r\n                  rules={{ required: true }}\r\n                  sx={{ m: 1 }}\r\n                />\r\n              )}\r\n            </Box>\r\n            {dirForm.state === 'form' && (\r\n              <TextFieldComp name={'FormToken'} control={control} label={'Token Form'} rules={{ required: true }} />\r\n            )}\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n                alignItems: 'center',\r\n                height: matches ? '3.125rem' : '6.25rem',\r\n                width: matches ? '18.75rem' : '37.5rem',\r\n              }}\r\n            >\r\n              <Link\r\n                onClick={() => {\r\n                  navigate('/resetpass');\r\n                }}\r\n              >\r\n                Forgot Password ?\r\n              </Link>\r\n              {dirForm.state === 'login' && (\r\n                <LoadingButton type=\"submit\" sx={{ height: '3.125rem', m: 1, width: '6.25rem' }} loading={btnClicked}>\r\n                  Login\r\n                </LoadingButton>\r\n              )}\r\n              {dirForm.state === 'form' && (\r\n                <Button type=\"submit\" sx={{ height: '3.125rem', m: 1, width: '6.25rem' }}>\r\n                  Open\r\n                </Button>\r\n              )}\r\n            </Box>\r\n          </Paper>\r\n        </form>\r\n      </Box>\r\n      <Backdrop sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }} open={openLoad}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n}\r\n"],"names":["PasswordWithEyes","_ref","control","label","name","rules","_useState","useState","_useState2","_slicedToArray","showPassword","setPwd","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","_jsx","_Fragment","children","Controller","render","_ref2","_ref2$field","field","onChange","value","error","fieldState","_jsxs","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","id","type","inputProps","autoComplete","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","TextFieldComp","valueovr","readOnly","onChangeovr","toUpperCase","toLowerCase","helperText","defaultValue","ref","TextField","message","e","target","onBlur","undefined","inputRef","Username","Password","FormToken","LoginPage","matches","useMediaQuery","btnClicked","setBtnclicked","_useForm","useForm","defaultValues","handleSubmit","_useState3","_useState4","openLoad","setOpenload","_useState5","state","html","_useState6","dirForm","navigate","useNavigate","setSession","useSession","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","logindata","response","_err$response","_err$response$data","wrap","_context","prev","next","concat","axios","post","process","username","password","sent","alert","setTimeout","t0","console","log","stop","_x","apply","arguments","useEffect","Cookies","get","Navigate","to","Box","sx","display","alignItems","justifyContent","height","width","backgroundImage","imgbg","backgroundRepeat","backgroundSize","Paper","p","flexDirection","elevation","gap","SvgIcon","component","KpnNav","mt","viewBox","color","Typography","mb","pb","required","m","Link","LoadingButton","loading","Button","Backdrop","zIndex","theme","drawer","open","CircularProgress"],"sourceRoot":""}