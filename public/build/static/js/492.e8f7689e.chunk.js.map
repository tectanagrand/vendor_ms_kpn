{"version":3,"file":"static/js/492.e8f7689e.chunk.js","mappings":"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","sources":["components/common/PasswordWithEyes.js","components/common/PatternFieldComp.js","components/common/TextFieldComp.js","pages/ResetPassword.js"],"sourcesContent":["import { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from '@mui/material';\r\nimport { Controller } from 'react-hook-form';\r\nimport { useState } from 'react';\r\n\r\nexport const PasswordWithEyes = ({ control, label, name, rules }) => {\r\n  const [showPassword, setPwd] = useState(false);\r\n\r\n  const handleClickShowPassword = () => setPwd((show) => !show);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        rules={rules}\r\n        render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n          <FormControl fullWidth variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              onChange={onChange}\r\n              value={value}\r\n              error={error}\r\n              inputProps={{ autoComplete: 'new-password' }}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label={label}\r\n            />\r\n          </FormControl>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { Controller } from 'react-hook-form';\r\nimport { PatternFormat } from 'react-number-format';\r\nimport { TextField } from '@mui/material';\r\n\r\nexport default function PatternFieldComp({\r\n  name,\r\n  control,\r\n  rules,\r\n  label,\r\n  format,\r\n  onChangeovr,\r\n  readOnly,\r\n  isNumString,\r\n  patternChar,\r\n}) {\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={rules}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <PatternFormat\r\n          value={field.value}\r\n          format={format}\r\n          valueIsNumericString={isNumString}\r\n          onChange={(e) => {\r\n            if (onChangeovr !== undefined) {\r\n              onChangeovr(e.target.value);\r\n            }\r\n            field.onChange(e.target.value);\r\n          }}\r\n          label={label}\r\n          error={error}\r\n          inputRef={field.ref}\r\n          customInput={TextField}\r\n          patternChar={patternChar}\r\n          inputProps={{\r\n            readOnly: readOnly,\r\n          }}\r\n          fullWidth\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { TextField } from '@mui/material';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nexport const TextFieldComp = ({\r\n  control,\r\n  label,\r\n  name,\r\n  rules,\r\n  valueovr,\r\n  readOnly,\r\n  onChangeovr,\r\n  toUpperCase,\r\n  toLowerCase,\r\n  helperText,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        rules={rules}\r\n        defaultValue={valueovr}\r\n        render={({ field: { onChange, value, ref }, fieldState: { error } }) => (\r\n          <TextField\r\n            helperText={error ? error.message : helperText}\r\n            error={!!error}\r\n            onChange={(e) => {\r\n              if (toUpperCase) {\r\n                onChange(e.target.value.toUpperCase());\r\n              } else if (toLowerCase) {\r\n                onChange(e.target.value.toLowerCase());\r\n              } else {\r\n                onChange(e);\r\n              }\r\n            }}\r\n            onBlur={(e) => {\r\n              if (onChangeovr !== undefined) {\r\n                onChangeovr(e.target.value);\r\n              }\r\n            }}\r\n            inputRef={ref}\r\n            value={value}\r\n            label={label}\r\n            variant=\"outlined\"\r\n            inputProps={{ readOnly: readOnly }}\r\n            fullWidth\r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Box, Paper, SvgIcon, Typography, Button, Snackbar, Alert, Link, CircularProgress } from '@mui/material';\r\nimport imgbg from '../images/gama-tower.jpg';\r\nimport { PasswordWithEyes } from 'src/components/common/PasswordWithEyes';\r\nimport { ReactComponent as KpnNav } from '../images/kpn-logo.svg';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { TextFieldComp } from 'src/components/common/TextFieldComp';\r\nimport { useForm } from 'react-hook-form';\r\nimport PatternFieldComp from 'src/components/common/PatternFieldComp';\r\nimport Cookies from 'js-cookie';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { set } from 'date-fns';\r\n\r\nexport default function ResetPassword() {\r\n  const navigate = useNavigate();\r\n  const matches = useMediaQuery('(max-width:380px)');\r\n  const { handleSubmit, control, reset, getValues } = useForm({\r\n    defaultValues: {\r\n      username: '',\r\n    },\r\n  });\r\n  const [countDown, setCountdown] = useState();\r\n\r\n  const Submission = async (values) => {\r\n    if (userid === '') {\r\n      await sendOTP(values);\r\n      setCountdown(60);\r\n    } else if (!otpVerified && userid !== '') {\r\n      await verifOTP(values);\r\n    } else if (otpVerified && userid !== '') {\r\n      await resetUser(values);\r\n    }\r\n  };\r\n\r\n  const GoBack = () => {\r\n    if (userid !== '') {\r\n      setUserid('');\r\n    }\r\n    if (otpVerified) {\r\n      setOtp(false);\r\n    }\r\n  };\r\n\r\n  const sendOTP = async (values) => {\r\n    try {\r\n      setBtnclicked(true);\r\n      setResendload(true);\r\n      const send_otp = await axios.post(`${process.env.REACT_APP_URL_LOC}/otp/sendotp`, {\r\n        username: values.username === undefined ? userName : values.username,\r\n      });\r\n      Cookies.set('user_id', send_otp.data.user_id);\r\n      setOpennotif({\r\n        open: true,\r\n        status: 'success',\r\n        message: send_otp.data.message,\r\n      });\r\n      setUserid(send_otp.data.user_id);\r\n      setBtnclicked(false);\r\n      setResendload(false);\r\n      setUsername(values.username);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setResendload(false);\r\n      setBtnclicked(false);\r\n      setUserid('');\r\n      setOpennotif({\r\n        open: true,\r\n        status: 'error',\r\n        message: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const verifOTP = async (values) => {\r\n    setBtnclicked(true);\r\n    try {\r\n      const verif_otp = await axios.post(\r\n        `${process.env.REACT_APP_URL_LOC}/otp/validateotp`,\r\n        {\r\n          OTP: values.OTP,\r\n        },\r\n        { withCredentials: true }\r\n      );\r\n      setOpennotif({\r\n        open: true,\r\n        status: 'success',\r\n        message: verif_otp.data.message,\r\n      });\r\n      reset({\r\n        username: userName,\r\n      });\r\n      setOtp(true);\r\n      setBtnclicked(false);\r\n    } catch (error) {\r\n      setBtnclicked(false);\r\n      setOtp(false);\r\n      setOpennotif({\r\n        open: true,\r\n        status: 'error',\r\n        message: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const resetUser = async (values) => {\r\n    try {\r\n      setBtnclicked(true);\r\n      const verif_otp = await axios.post(\r\n        `${process.env.REACT_APP_URL_LOC}/user/resetpwd`,\r\n        {\r\n          newpwd: values.newpwd,\r\n        },\r\n        { withCredentials: true }\r\n      );\r\n      setOpennotif({\r\n        open: true,\r\n        status: 'success',\r\n        message: verif_otp.data.message,\r\n      });\r\n      setBtnclicked(false);\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 1000);\r\n    } catch (error) {\r\n      setOpennotif({\r\n        open: true,\r\n        status: 'error',\r\n        message: error.response.data.message,\r\n      });\r\n      setBtnclicked(false);\r\n    }\r\n  };\r\n\r\n  const resendCode = () => {\r\n    setResendload(true);\r\n\r\n    setTimeout(() => {\r\n      setResendload(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const backLogin = () => {\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleSnackClose = () => {\r\n    setOpennotif({ ...openNotif, open: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let countDowninterval = setInterval(() => {\r\n      if (countDown > 0) {\r\n        setCountdown(countDown - 1);\r\n      } else {\r\n        clearInterval(countDowninterval);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(countDowninterval);\r\n  }, [countDown]);\r\n\r\n  const [btnClicked, setBtnclicked] = useState();\r\n  const [userName, setUsername] = useState('');\r\n  const [resendLoad, setResendload] = useState(false);\r\n  const [userid, setUserid] = useState('');\r\n  const [otpVerified, setOtp] = useState(false);\r\n  const [openNotif, setOpennotif] = useState({\r\n    open: false,\r\n    status: 'success',\r\n    message: '',\r\n  });\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100%',\r\n          width: '100%',\r\n          backgroundImage: `url(${imgbg})`,\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'cover',\r\n        }}\r\n      >\r\n        <form onSubmit={handleSubmit(Submission)}>\r\n          <Paper\r\n            sx={{\r\n              display: 'flex',\r\n              width: matches ? '18.75rem' : '37.5rem',\r\n              height: matches ? '41.5rem' : '22.75rem',\r\n              p: 2,\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n            elevation={3}\r\n          >\r\n            <Box sx={{ display: 'flex', gap: 1, height: '2rem', mt: '0.1rem' }}>\r\n              <SvgIcon\r\n                component={KpnNav}\r\n                sx={{ width: '2rem', height: '2rem', mt: '0.1rem' }}\r\n                viewBox=\"0 0 5000 5000\"\r\n                color=\"white\"\r\n              />\r\n              <Typography variant=\"h4\">Vendor Management System KPN</Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex' }}>\r\n              <Typography variant=\"h5\">Password Reset</Typography>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', width: '100%', gap: 1, mt: '2rem', flexGrow: 2 }}>\r\n              {userid === '' && !otpVerified && <TextFieldComp control={control} name=\"username\" label=\"Username\" />}\r\n              {userid !== '' && !otpVerified && (\r\n                <PatternFieldComp control={control} name=\"OTP\" label=\"OTP\" format=\"######\" />\r\n              )}\r\n              {userid !== '' && otpVerified && (\r\n                <>\r\n                  <TextFieldComp control={control} name=\"username\" label=\"Username\" readOnly={true} />\r\n                  <PasswordWithEyes control={control} name=\"newpwd\" label=\"New Password\" />\r\n                </>\r\n              )}\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'flex-end',\r\n                flexGrow: 1,\r\n                alignItems: 'center',\r\n                height: matches ? '3.125rem' : '0.1rem',\r\n                width: matches ? '18.75rem' : '37.5rem',\r\n              }}\r\n            >\r\n              {countDown > 0 && userid !== '' && !otpVerified && `Wait for resend OTP code (${countDown}) `}\r\n              {userid !== '' && !otpVerified && resendLoad && <CircularProgress sx={{ mr: 6 }} />}\r\n              {userid !== '' && !otpVerified && countDown <= 0 && !resendLoad && (\r\n                <Link onClick={sendOTP}>Resend OTP Code</Link>\r\n              )}\r\n              {userid !== '' && (\r\n                <Button\r\n                  onClick={GoBack}\r\n                  sx={{ height: '3.125rem', m: 1, width: '6.25rem' }}\r\n                  disabled={countDown > 0 && userid !== '' && !otpVerified}\r\n                >\r\n                  Back\r\n                </Button>\r\n              )}\r\n              {userid === '' && !otpVerified && (\r\n                <Button onClick={backLogin} sx={{ height: '3.125rem', m: 1, width: '6.25rem' }}>\r\n                  Back\r\n                </Button>\r\n              )}\r\n              <LoadingButton type=\"submit\" sx={{ height: '3.125rem', m: 1, width: '6.25rem' }} loading={btnClicked}>\r\n                {userid === '' && !otpVerified && 'Send OTP'}\r\n                {userid !== '' && !otpVerified && 'Verify'}\r\n                {userid !== '' && otpVerified && 'Submit'}\r\n              </LoadingButton>\r\n            </Box>\r\n          </Paper>\r\n        </form>\r\n      </Box>\r\n      <Snackbar\r\n        open={openNotif.open}\r\n        onClose={handleSnackClose}\r\n        autoHideDuration={3000}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <Alert severity={openNotif.status} variant=\"filled\" onClose={handleSnackClose}>\r\n          {openNotif.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n}\r\n"],"names":["PasswordWithEyes","_ref","control","label","name","rules","_useState","useState","_useState2","_slicedToArray","showPassword","setPwd","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","_jsx","_Fragment","children","Controller","render","_ref2","_ref2$field","field","onChange","value","error","fieldState","_jsxs","FormControl","fullWidth","variant","InputLabel","htmlFor","OutlinedInput","id","type","inputProps","autoComplete","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","VisibilityOff","Visibility","PatternFieldComp","format","onChangeovr","readOnly","isNumString","patternChar","PatternFormat","valueIsNumericString","e","undefined","target","inputRef","ref","customInput","TextField","TextFieldComp","valueovr","toUpperCase","toLowerCase","helperText","defaultValue","message","onBlur","ResetPassword","navigate","useNavigate","matches","useMediaQuery","_useForm","useForm","defaultValues","username","handleSubmit","reset","getValues","countDown","setCountdown","Submission","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","userid","sendOTP","otpVerified","verifOTP","resetUser","stop","_x","apply","arguments","_callee2","send_otp","_context2","setBtnclicked","setResendload","axios","post","concat","process","userName","sent","Cookies","set","data","user_id","setOpennotif","open","status","setUserid","setUsername","t0","console","log","response","_x2","_ref3","_callee3","verif_otp","_context3","OTP","withCredentials","setOtp","_x3","_ref4","_callee4","_context4","newpwd","setTimeout","_x4","handleSnackClose","_objectSpread","openNotif","useEffect","countDowninterval","setInterval","clearInterval","_useState3","_useState4","btnClicked","_useState5","_useState6","_useState7","_useState8","resendLoad","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","Box","sx","display","alignItems","justifyContent","height","width","backgroundImage","imgbg","backgroundRepeat","backgroundSize","onSubmit","Paper","p","flexDirection","elevation","gap","mt","SvgIcon","component","KpnNav","viewBox","color","Typography","flexGrow","CircularProgress","mr","Link","Button","m","disabled","LoadingButton","loading","Snackbar","onClose","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity"],"sourceRoot":""}